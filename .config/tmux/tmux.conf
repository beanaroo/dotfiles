#----------------------------------#
#------- tmux configuration -------#
#----------------------------------#

#                     #
#- Terminal Settings -#
#                     #

# Set default TERM
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ',xterm*:XT:smcup@:rmcup@:Tc'
set -ga update-environment " ZDOTDIR"

# History limit
set -g history-limit 100000

# Set terminal window title to pane title
set -g set-titles on
set -g set-titles-string "#T"

# Enable focus events (useful for vim)
set -g focus-events on

#                     #
#- Display Settings --#
#                     #

### Window ###

# Constrain window to size of maximum client connected (to the window)
#setw -g aggressive-resize on

### Status Line ###

# Disable status bar.
#set-option -g status off

# Update status frequently
set-option -g status-interval 60

# Status line style

set -g status-attr "none"
set-option -g status-justify "centre"
set-option -g status-style fg=colour7,bg=colour18

set-option -g message-style fg=colour7,bg=colour19

set-option -g message-command-style fg=colour7,bg=colour19

set-option -g status-left-attr "none"
set-option -g status-left-length "100"
set-option -g status-left "#[fg=colour18,bg=colour4,bold]  #S #[fg=colour4,bg=colour19,nobold,nounderscore,noitalics]#[fg=colour7,bg=colour19]  #I:#P #[fg=colour19,bg=colour18,nobold,nounderscore,noitalics]"

set-option -g status-right-attr "none"
set-option -g status-right-length "100"
set-option -g status-right "#[fg=colour19,bg=colour18,nobold,nounderscore,noitalics]#[fg=colour20,bg=colour19]  #[fg=colour4,bg=colour19,nobold,nounderscore,noitalics]#[fg=colour18,bg=colour4] #{?client_prefix, , } "

set -g pane-border-style "fg=colour19"
set -g pane-active-border-style "fg=colour4"

set-window-option -g window-status-separator ""
set-window-option -g window-status-style "fg=colour7,bg=colour18,none"
set-window-option -g window-status-format "#[fg=colour18,bg=colour18,nobold,nounderscore,noitalics]#[default] "
set-window-option -ag window-status-format "#(~/.config/tmux/tmux-icon #T)"
set-window-option -ag window-status-format " #[fg=colour18,bg=colour18,nobold,nounderscore,noitalics]"

#set-window-option -g window-status-bell-style "fg=colour18,bg=colour9,none"
#set-window-option -g window-status-bell-format "#[fg=colour18,bg=colour9,bold,nounderscore,noitalics]#[default]  #W #[fg=colour9,bg=colour18,nobold,nounderscore,noitalics]"

set-window-option -g window-status-activity-style "fg=colour4,bg=colour18,none"
set-window-option -g window-status-current-format "#[fg=colour18,bg=colour19,nobold,nounderscore,noitalics]#[fg=colour7,bg=colour19] "
set-window-option -ag window-status-current-format "#(~/.config/tmux/tmux-icon #T)"
set-window-option -ag window-status-current-format " #[fg=colour19,bg=colour18,nobold,nounderscore,noitalics]"


#                             #
##---- Input and Control ----##
#                             #

### Mouse ###

# Enable mouse
set -g mouse on

# If inside an alternate screen (pager/curses), forward WheelUp,
# else select pane under cursor, enter tmux copy mode and then forward WheelUp.
bind-key -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys Up" "select-pane -t =; copy-mode -e; send-keys -M"

# If inside an alternate screen (pager/curses), forward WheelDown,
# else select pane under cursor and then forward WheelDown.
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys Down" "select-pane -t =; send-keys -M"


### Keyboard ###

# Faster key repetition
set -s escape-time 0

# Set prefix to same as screen. C-b conflicts with Vim.
set-option -g prefix C-a
bind-key C-a last-window

# Set prefix for nested sessions
bind-key a send-prefix

### Clipboard ###

# vim-like copypaste mode
set-window-option -g mode-keys vi
bind-key -t copy-mode-vi 'v' begin-selection
bind-key -t copy-mode-vi 'y' copy-pipe "xclip -i -sel clipboard"
bind-key -t copy-mode-vi 'C-v' rectangle-toggle
bind-key p run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

### Window control ###

# Show status line when more than one window is open
bind-key c if-shell "[ #{session_windows} -ge 2 ]" "new-window" "set-option status on; new-window"
## Hide status line when one window is open
bind-key & if-shell "[ #{session_windows} -le 2 ]" "confirm-before -p \"kill-window #W? (y/n)\" \"kill-window; set-option status off\"" "confirm-before -p \"kill-window #W? (y/n)\" kill-window"


### Pane Control ###

# in vim:
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# vim-like pane traversal
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# vim-like pane resize
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 6
